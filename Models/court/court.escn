[gd_scene load_steps=1 format=2]
[ext_resource id=1 path="Net.png" type="Texture"]

[sub_resource id=1 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}

void vertex () {
}

void fragment () {
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.042027365416288376, 0.042027365416288376,
		0.042027365416288376, 1.0);
	float node0_in1_roughness = float(0.0);
	vec3 node0_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_specular;
	float node0_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node0_in0_color, node0_in1_roughness, node0_bsdf_out0_albedo,
		node0_bsdf_out1_specular, node0_bsdf_out2_oren_nayar_roughness);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SPECULAR = node0_bsdf_out1_specular;
	NORMAL = node0_in2_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node0_bsdf_out2_oren_nayar_roughness;
}
"

[sub_resource id=2 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(1)

[sub_resource id=3 type="ArrayMesh"]

resource_name = "Plane004"
surfaces/0 = {
	"material":SubResource(2),
	"primitive":4,
	"arrays":[
		Vector3Array(0.08064, 3.06949, 16.1009, -0.08064, 3.06949, 15.9396, -0.08064, 3.06949, 16.1009, 0.0882, 0.00611635, 16.1084, -0.0882, 0.00611635, 16.1084, 0.0882, 0.00611635, 15.932, -0.0882, 0.00611635, 15.932, -0.199, -1.90735e-06, 15.7212, 0.199, -1.90735e-06, 16.3192, 0.199, -1.90735e-06, 15.7212, -0.199, -1.90735e-06, 16.3192, -0.00760039, 0.120541, 15.9326, 0.00744518, 0.134837, 15.9323, 0.00744518, 0.120541, 15.9326, -0.00760039, 0.134837, 15.9323, 0.00744518, 2.97129, 15.9393, 0.08064, 3.06949, 15.9396, 0.00744518, 2.95699, 15.9396, -0.00760039, 2.97129, 15.9393, -0.00760039, 2.95699, 15.9396, -0.00594337, 2.97129, 15.6777, 0.0014504, 2.97461, 15.6739, -0.00260039, 2.97461, 15.6739, 0.00179873, 2.90148, -15.7569, -0.0114241, 2.95699, -15.7628, 0.0129491, 2.95699, -15.7628, 0.00561481, 2.97129, -15.7625, -0.0010682, 2.97461, -15.7572, 0.0025981, 2.97461, -15.7572, -0.0809686, 3.06949, -16.1857, 0.0803114, 3.06949, -16.0244, 0.0803114, 3.06949, -16.1857, -0.0885286, 0.00611639, -16.1933, 0.0878714, 0.00611639, -16.1933, -0.0885286, 0.00611639, -16.0169, 0.0878714, 0.00611639, -16.0169, 0.198671, -1.90735e-06, -15.8061, -0.199329, -1.90735e-06, -16.4041, -0.199329, -1.90735e-06, -15.8061, 0.198671, -1.90735e-06, -16.4041, 0.0072718, 0.120016, -16.0174, -0.00777377, 0.134313, -16.0172, -0.00777377, 0.120016, -16.0174, 0.0072718, 0.134313, -16.0172, -0.00777377, 2.97129, -16.0242, -0.0809686, 3.06949, -16.0244, -0.00777377, 2.95699, -16.0244, 0.0072718, 2.97129, -16.0242, 0.0072718, 2.95699, -16.0244, 0.00445654, 2.97129, 15.6777, -0.0047851, 2.97129, -15.7625),
		Vector3Array(0.576701, 0.578646, 0.576702, -0.576722, 0.57842, -0.576907, -0.576702, 0.578646, 0.576701, 0.325137, 0.893875, 0.308662, -0.325137, 0.893875, 0.308663, 0.324833, 0.893994, -0.308638, -0.324833, 0.893995, -0.308636, -0.0170062, 0.999654, -0.020075, 0.0170062, 0.999654, 0.020075, 0.0170062, 0.999654, -0.0200749, -0.0170062, 0.999654, 0.0200747, 0.0165389, -0.00698701, -0.999839, -0.00348099, 0.000198443, -0.999994, -0.0165012, -0.00702071, -0.999839, 0.00348191, 0.000198619, -0.999994, 0.0139252, -0.00788703, -0.999872, 0.576724, 0.578418, -0.576908, 0.00105677, 0.000170142, -0.999999, -0.0139604, -0.00787761, -0.999872, -0.00105278, 0.000169591, -0.999999, 0.0, 0.750402, 0.660982, 0.0, 0.750379, 0.661008, 0.0, 0.750529, 0.660837, 0.0, -0.10397, -0.99458, 0.0, -0.10397, -0.99458, 0.0, -0.10397, -0.99458, 0.0, 0.847713, -0.530456, 0.0, 0.847713, -0.530455, 0.0, 0.847725, -0.530435, -0.576701, 0.578646, -0.576702, 0.576719, 0.578427, 0.576904, 0.576702, 0.578646, -0.576701, -0.325137, 0.893875, -0.308662, 0.325137, 0.893875, -0.308663, -0.324831, 0.893995, 0.308638, 0.324831, 0.893996, 0.308636, 0.0170063, 0.999654, 0.020075, -0.0170063, 0.999654, -0.0200751, -0.0170063, 0.999654, 0.0200753, 0.0170063, 0.999654, -0.0200753, -0.0164653, -0.0070524, 0.99984, 0.00348863, 0.000166879, 0.999994, 0.0164277, -0.00704743, 0.99984, -0.00348958, 0.000166064, 0.999994, -0.0139252, -0.00787826, 0.999872, -0.57672, 0.578425, 0.576905, -0.00105716, 0.000170191, 0.999999, 0.0139604, -0.00787762, 0.999872, 0.00105318, 0.000170258, 0.999999, 0.0, 0.750319, 0.661076, 0.0, 0.847706, -0.530466),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 4, 2, 5, 3, 0, 4, 6, 1, 5, 6, 7, 4, 3, 8, 3, 5, 9, 6, 4, 10, 11, 6, 5, 12, 13, 5, 11, 14, 6, 15, 17, 16, 18, 1, 19, 15, 16, 1, 19, 12, 17, 20, 22, 21, 23, 25, 24, 26, 28, 27, 29, 31, 30, 32, 33, 31, 34, 32, 29, 33, 35, 30, 34, 35, 36, 33, 32, 37, 32, 34, 38, 35, 33, 39, 40, 35, 34, 41, 42, 34, 40, 43, 35, 44, 46, 45, 47, 30, 48, 44, 45, 30, 48, 41, 46, 0, 1, 16, 3, 2, 0, 5, 0, 16, 4, 1, 2, 5, 7, 9, 4, 8, 10, 3, 9, 8, 6, 10, 7, 11, 5, 13, 15, 1, 18, 14, 1, 6, 14, 19, 1, 16, 12, 5, 12, 19, 14, 17, 12, 16, 20, 21, 49, 26, 27, 50, 29, 30, 45, 32, 31, 29, 34, 29, 45, 33, 30, 31, 34, 36, 38, 33, 37, 39, 32, 38, 37, 35, 39, 36, 40, 34, 42, 44, 30, 47, 43, 30, 35, 43, 48, 30, 45, 41, 34, 41, 48, 43, 46, 41, 45)
	],
	"morph_arrays":[]
}

[sub_resource id=4 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}

void vertex () {
}

void fragment () {
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.09305896610021591, 0.26635563373565674,
		0.47353148460388184, 1.0);
	float node0_in1_roughness = float(0.0);
	vec3 node0_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_specular;
	float node0_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node0_in0_color, node0_in1_roughness, node0_bsdf_out0_albedo,
		node0_bsdf_out1_specular, node0_bsdf_out2_oren_nayar_roughness);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SPECULAR = node0_bsdf_out1_specular;
	NORMAL = node0_in2_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node0_bsdf_out2_oren_nayar_roughness;
}
"

[sub_resource id=5 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(4)

[sub_resource id=6 type="ArrayMesh"]

resource_name = "Plane003"
surfaces/0 = {
	"material":SubResource(5),
	"primitive":4,
	"arrays":[
		Vector3Array(14.7479, 0.0, 0.163373, 0.176941, 0.0, 9.91513, 14.7479, 0.0, 9.91513, 29.2921, 0.0, -13.3686, 0.176941, 0.0, -13.3686, 14.7479, 0.0, -10.2712, -0.176941, 0.0, 0.163373, 0.176941, 0.0, -0.163373, -0.176941, 0.0, -0.163373, -14.7479, 0.0, 9.91513, -0.176941, 0.0, 9.91513, -0.176941, 0.0, -9.91513, -14.7479, 0.0, -0.163373, -0.176941, 0.0, -13.3686, -29.2921, 0.0, -13.3686, -14.7479, 0.0, -10.2712, 14.7479, 0.0, -9.91513, 14.7479, 0.0, -0.163373, -15.1017, 0.0, 10.2712, -29.2921, 0.0, 10.2712, -29.2921, 0.0, 13.3686, -15.1017, 0.0, -9.91513, -29.2921, 0.0, -9.91513, -28.6921, 0.0, -0.163373, 0.176941, 0.0, -9.91513, 0.176941, 0.0, 0.163373, 28.6921, 0.0, -0.163373, 15.1017, 0.0, -0.163373, 15.1017, 0.0, 0.163373, 0.176941, 0.0, 13.3686, 29.2921, 0.0, 13.3686, 14.7479, 0.0, 10.2712, 0.176941, 0.0, -10.2712, 15.1017, 0.0, -10.2712, 29.2921, 0.0, -10.2712, -14.7479, 0.0, 0.163373, -14.7479, 0.0, -9.91513, -15.1017, 0.0, -10.2712, -0.176941, 0.0, -10.2712, -29.2921, 0.0, -10.2712, -0.176941, 0.0, 13.3686, -14.7479, 0.0, 10.2712, -0.176941, 0.0, 10.2712, -28.6921, 0.0, 0.163373, -29.2921, 0.0, 0.163373, -29.2921, 0.0, 9.91513, -15.1017, 0.0, 9.91513, -15.1017, 0.0, -0.163373, -15.1017, 0.0, 0.163373, -29.2921, 0.0, -0.163373, 15.1017, 0.0, 9.91513, 28.6921, 0.0, 0.163373, 29.2921, 0.0, 9.91513, 29.2921, 0.0, 0.163373, 29.2921, 0.0, -0.163373, 29.2921, 0.0, -9.91513, 15.1017, 0.0, -9.91513, 15.1017, 0.0, 10.2712, 0.176941, 0.0, 10.2712, 29.2921, 0.0, 10.2712),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 6, 10, 9, 11, 8, 12, 13, 15, 14, 16, 17, 7, 18, 20, 19, 21, 23, 22, 11, 24, 7, 25, 1, 10, 26, 28, 27, 29, 31, 30, 0, 1, 25, 32, 4, 5, 33, 3, 34, 3, 33, 5, 6, 7, 25, 6, 9, 35, 11, 12, 36, 37, 14, 15, 38, 15, 13, 14, 37, 39, 16, 7, 24, 20, 41, 40, 41, 20, 18, 40, 41, 42, 43, 45, 44, 45, 43, 46, 47, 23, 21, 46, 43, 48, 43, 47, 48, 22, 23, 49, 23, 47, 43, 11, 7, 8, 25, 10, 6, 28, 51, 50, 52, 51, 53, 26, 55, 54, 50, 51, 52, 26, 56, 55, 28, 26, 51, 26, 27, 56, 57, 30, 31, 58, 31, 29, 30, 57, 59)
	],
	"morph_arrays":[]
}

[sub_resource id=7 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}

void vertex () {
}

void fragment () {
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node0_in1_roughness = float(0.0);
	vec3 node0_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_specular;
	float node0_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node0_in0_color, node0_in1_roughness, node0_bsdf_out0_albedo,
		node0_bsdf_out1_specular, node0_bsdf_out2_oren_nayar_roughness);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SPECULAR = node0_bsdf_out1_specular;
	NORMAL = node0_in2_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node0_bsdf_out2_oren_nayar_roughness;
}
"

[sub_resource id=8 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(7)

[sub_resource id=9 type="ArrayMesh"]

resource_name = "Plane002"
surfaces/0 = {
	"material":SubResource(8),
	"primitive":4,
	"arrays":[
		Vector3Array(14.7479, 0.0, -0.163373, 0.176941, 0.0, 0.163373, 14.7479, 0.0, 0.163373, 14.7479, 0.0, -10.2712, 0.176941, 0.0, -9.91513, 14.7479, 0.0, -9.91513, 14.7479, 0.0, 9.91513, 0.176941, 0.0, 10.2712, 14.7479, 0.0, 10.2712, 15.1017, 0.0, 0.163373, 15.1017, 0.0, 10.2712, 29.2921, 0.0, 9.91513, 15.1017, 0.0, 9.91513, 0.176941, 0.0, 13.7174, 29.2921, 0.0, 13.3686, 0.176941, 0.0, 13.3686, -0.176941, 0.0, -0.163373, -14.7479, 0.0, 0.163373, -0.176941, 0.0, 0.163373, -0.176941, 0.0, 9.91513, -14.7479, 0.0, 10.2712, -0.176941, 0.0, 10.2712, -15.1017, 0.0, 9.91513, -14.7479, 0.0, 9.91513, -15.1017, 0.0, 0.163373, -29.2921, 0.0, 9.91513, -15.1017, 0.0, 10.2712, -0.176941, 0.0, 13.3686, -29.2921, 0.0, 13.7174, -0.176941, 0.0, 13.7174, 15.1017, 0.0, -9.91513, 15.1017, 0.0, -0.163373, 29.2921, 0.0, -9.91513, 15.1017, 0.0, -10.2712, 29.2921, 0.0, -13.3686, 0.176941, 0.0, -13.7174, 0.176941, 0.0, -13.3686, -0.176941, 0.0, -10.2712, -14.7479, 0.0, -9.91513, -0.176941, 0.0, -9.91513, -14.7479, 0.0, -10.2712, -15.1017, 0.0, -9.91513, -15.1017, 0.0, -0.163373, -14.7479, 0.0, -0.163373, -15.1017, 0.0, -10.2712, -29.2921, 0.0, -9.91513, -0.176941, 0.0, -13.7174, -29.2921, 0.0, -13.3686, -0.176941, 0.0, -13.3686, 0.176941, 0.0, -10.2712, 0.176941, 0.0, 9.91513, 29.6921, 0.0, 0.163373, 29.2921, 0.0, 0.163373, 29.2921, 0.0, -10.2712, 29.6921, 0.0, -13.3686, 29.6921, 0.0, -0.163373, 29.2921, 0.0, -0.163373, 29.2921, 0.0, 13.7174, 29.6921, 0.0, 13.3686, 29.2921, 0.0, 10.2712, 29.6921, 0.0, 9.91513, 29.6921, 0.0, -13.7174, 29.2921, 0.0, -13.7174, 29.6921, 0.0, -10.2712, 29.6921, 0.0, 10.2712, -29.2921, 0.0, 10.2712, -29.6921, 0.0, 13.3686, -29.2921, 0.0, 13.3686, -29.2921, 0.0, 0.163373, -29.6921, 0.0, 9.91513, -29.2921, 0.0, -13.7174, -29.6921, 0.0, -13.3686, -29.2921, 0.0, -10.2712, -29.6921, 0.0, -9.91513, -29.6921, 0.0, 13.7174, -29.6921, 0.0, 10.2712, -29.6921, 0.0, -10.2712, -29.6921, 0.0, -0.163373, -29.2921, 0.0, -0.163373, 28.6921, 0.0, -0.163373, 28.6921, 0.0, 0.163373, -29.6921, 0.0, 0.163373, -28.6921, 0.0, -0.163373, 0.176941, 0.0, -0.163373, 29.6921, 0.0, -9.91513, 29.6921, 0.0, 13.7174, -29.6921, 0.0, -13.7174, -28.6921, 0.0, 0.163373),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 8, 7, 6, 2, 9, 10, 12, 11, 13, 15, 14, 16, 18, 17, 19, 21, 20, 22, 23, 20, 24, 17, 23, 25, 22, 26, 27, 29, 28, 30, 5, 3, 31, 0, 5, 32, 30, 33, 34, 36, 35, 37, 39, 38, 40, 38, 41, 38, 43, 42, 44, 41, 45, 46, 48, 47, 9, 2, 0, 43, 17, 24, 37, 49, 4, 46, 35, 36, 48, 36, 49, 15, 13, 29, 50, 7, 21, 7, 15, 27, 11, 52, 51, 53, 34, 54, 55, 56, 32, 57, 14, 58, 59, 11, 60, 34, 62, 61, 32, 53, 63, 14, 59, 64, 65, 67, 66, 68, 25, 69, 70, 47, 71, 72, 45, 73, 67, 28, 74, 25, 65, 75, 47, 72, 76, 45, 78, 77, 51, 52, 56, 52, 80, 79, 78, 68, 81, 68, 78, 82, 8, 6, 12, 0, 1, 83, 3, 4, 49, 6, 7, 50, 6, 9, 12, 10, 11, 59, 13, 14, 57, 16, 17, 43, 19, 20, 23, 22, 20, 26, 24, 23, 22, 25, 26, 65, 27, 28, 67, 30, 3, 33, 31, 5, 30, 32, 33, 53, 34, 35, 62, 37, 38, 40, 40, 41, 44, 38, 42, 41, 44, 45, 72, 46, 47, 70, 9, 0, 31, 43, 24, 42, 37, 4, 39, 46, 36, 48, 48, 49, 37, 15, 29, 27, 50, 21, 19, 7, 27, 21, 11, 51, 60, 53, 54, 63, 55, 32, 84, 57, 58, 85, 59, 60, 64, 34, 61, 54, 32, 63, 84, 14, 64, 58, 65, 66, 75, 68, 69, 81, 70, 71, 86, 72, 73, 76, 67, 74, 66, 25, 75, 69, 47, 76, 71, 45, 77, 73, 51, 56, 55, 52, 79, 56, 78, 81, 77, 68, 82, 87, 8, 12, 10)
	],
	"morph_arrays":[]
}

[sub_resource id=10 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}

void vertex () {
}

void fragment () {
	
	// node: 'Texture Coordinate'
	// type: 'ShaderNodeTexCoord'
	// input sockets handling
	// output sockets definitions
	
	
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node1_in0_color = vec4(0.800000011920929, 0.800000011920929,
		0.800000011920929, 1.0);
	float node1_in1_roughness = float(0.0);
	vec3 node1_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node1_bsdf_out0_albedo;
	float node1_bsdf_out1_specular;
	float node1_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node1_in0_color, node1_in1_roughness, node1_bsdf_out0_albedo,
		node1_bsdf_out1_specular, node1_bsdf_out2_oren_nayar_roughness);
	
	
	ALBEDO = node1_bsdf_out0_albedo;
	SPECULAR = node1_bsdf_out1_specular;
	NORMAL = node1_in2_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node1_bsdf_out2_oren_nayar_roughness;
}
"

[sub_resource id=11 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(10)

[sub_resource id=12 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;

uniform sampler2D texture_0;


void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}


void node_bsdf_transparent(vec4 color, out float alpha) {
    alpha = clamp(1.0 - dot(color.rgb, vec3(0.3333334)), 0.0, 1.0);
}


void node_tex_image(vec3 co, sampler2D ima, out vec4 color, out float alpha) {
    color = texture(ima, co.xy);
    alpha = color.a;
}

void vertex () {
}

void fragment () {
	
	// node: 'Transparent BSDF'
	// type: 'ShaderNodeBsdfTransparent'
	// input sockets handling
	vec4 node0_in0_color = vec4(1.0, 1.0, 1.0, 1.0);
	// output sockets definitions
	float node0_bsdf_out0_alpha;
	
	node_bsdf_transparent(node0_in0_color, node0_bsdf_out0_alpha);
	
	
	// node: 'Texture Coordinate'
	// type: 'ShaderNodeTexCoord'
	// input sockets handling
	// output sockets definitions
	vec3 node1_out0_uv;
	
	node1_out0_uv = vec3(UV, 0.0);
	
	
	// node: 'Image Texture'
	// type: 'ShaderNodeTexImage'
	// input sockets handling
	vec3 node2_in0_vector = node1_out0_uv;
	// output sockets definitions
	vec4 node2_out0_color;
	float node2_out1_alpha;
	
	node_tex_image(node2_in0_vector, texture_0, node2_out0_color, node2_out1_alpha);
	
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node3_in0_color = node2_out0_color;
	float node3_in1_roughness = float(0.0);
	vec3 node3_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node3_bsdf_out0_albedo;
	float node3_bsdf_out1_specular;
	float node3_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node3_in0_color, node3_in1_roughness, node3_bsdf_out0_albedo,
		node3_bsdf_out1_specular, node3_bsdf_out2_oren_nayar_roughness);
	
	
	// node: 'Mix Shader'
	// type: 'ShaderNodeMixShader'
	// input sockets handling
	float node4_in0_fac = node2_out1_alpha;
	float node4_shader_in1_alpha = node0_bsdf_out0_alpha;
	vec3 node4_shader_in2_albedo = node3_bsdf_out0_albedo;
	float node4_shader_in3_specular = node3_bsdf_out1_specular;
	float node4_shader_in4_oren_nayar_roughness =
		node3_bsdf_out2_oren_nayar_roughness;
	vec3 node4_shader_in5_normal = node3_in2_normal;
	// output sockets definitions
	float node4_shader_out1_alpha;
	
	node4_shader_out1_alpha = mix(node4_shader_in1_alpha, 1.0, node4_in0_fac);
	
	
	ALBEDO = node4_shader_in2_albedo;
	SPECULAR = node4_shader_in3_specular;
	NORMAL = node4_shader_in5_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node4_shader_in4_oren_nayar_roughness;
	EMISSION += textureLod(SCREEN_TEXTURE, SCREEN_UV, ROUGHNESS).rgb * (1.0 -
		node4_shader_out1_alpha);
	ALBEDO *= node4_shader_out1_alpha;
	ALPHA = 1.0;
}
"

[sub_resource id=13 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(12)
shader_param/texture_0 = ExtResource(1)

[sub_resource id=14 type="ArrayMesh"]

resource_name = "Plane001"
surfaces/0 = {
	"material":SubResource(11),
	"primitive":4,
	"arrays":[
		Vector3Array(-0.00760039, 2.95699, 15.9396, 0.0110955, 2.95699, 15.6779, 0.00744518, 2.95699, 15.9396, 0.00744518, 0.134837, 15.9323, -0.00760039, 0.108346, 15.6779, -0.00760039, 0.134837, 15.9323, 0.00445654, 2.97129, 0.0631293, 0.00445654, 2.97129, 15.6777, 0.00744518, 2.97129, 15.9393, -0.00594337, 2.97129, 15.6777, -0.00760039, 2.97129, 15.9393, -0.00760039, 0.0940495, 15.6781, -0.00760039, 0.120541, 15.9326, 0.00744518, 0.120541, 15.9326, 0.00744518, 0.108346, 15.6779, -0.0132776, 2.95699, 15.6779, 0.00744518, 0.0940495, 15.6781, -5.48237e-05, 2.90148, 0.0633735, 0.0110955, 2.95699, -0.0633735, 0.0110955, 2.95699, 0.0633735, 0.00445654, 2.97129, -0.0636176, -0.0132776, 2.95739, 0.0633735, -0.00594337, 2.97129, 0.0631293, -0.0132776, 2.95739, -0.0633735, -5.48237e-05, 2.90148, 15.6779, 0.0014504, 2.97461, 0.0631293, -0.00260039, 2.97461, 15.6739, -0.00260039, 2.97461, 0.0631293, -5.48237e-05, 2.90148, 15.6779, -5.48237e-05, 2.85638, 0.0633735, -5.48237e-05, 2.90148, 0.0633735, 0.0014504, 2.97461, -0.0636176, -0.0010682, 2.97461, -15.7572, -0.00260039, 2.97461, -0.0636176, 0.00561481, 2.97129, -15.7625, -5.48237e-05, 2.90148, -0.0633735, -5.48237e-05, 2.90148, -0.0633735, -5.48237e-05, 2.90148, 0.0633735, -0.00594337, 2.97129, -0.0636176, -5.48237e-05, 2.85638, -0.0633735, 0.00179873, 2.90148, -15.7569, 0.00179873, 2.90148, -15.7569, 0.0025981, 2.97461, -15.7572, -0.0114241, 2.95699, -15.7628, -5.48237e-05, 0.236469, -0.0633735, 0.0072718, 2.95699, -16.0244, -0.00777377, 2.95699, -16.0244, -0.00777377, 2.97129, -16.0242, 0.0072718, 2.97129, -16.0242, -0.00777377, 0.120016, -16.0174, -0.00760039, 0.108346, -15.7569, -0.00777377, 0.134313, -16.0172, 0.0129491, 2.95699, -15.7628, -0.0047851, 2.97129, -15.7625, -5.48237e-05, 2.90148, -0.0633735, -5.48237e-05, 0.236469, 0.0633735, -0.00760039, 0.108346, -0.0633725, -0.00760039, 0.108346, 0.0633744, -5.48237e-05, 0.236469, 15.6779, 0.00744518, 0.0940495, -0.0631293, 0.00744518, 0.108346, -15.7569, 0.00744518, 0.108346, -0.0633725, 0.00744518, 0.108346, 0.0633744, -5.48237e-05, 0.236469, -0.0633735, -0.00760039, 0.0940495, -0.0631293, 0.00744518, 0.0940495, -15.7567, -0.00760039, 0.0940495, -15.7567, 0.0072718, 0.134313, -16.0172, 0.0072718, 0.120016, -16.0174, -5.48237e-05, 0.236469, -15.7569, -0.00760039, 0.0940495, 0.0636176, 0.00744518, 0.0940495, 0.0636176, -5.48237e-05, 0.236469, 15.6779, -5.48237e-05, 2.85638, 15.5779, -5.48237e-05, 2.85638, 15.6779, 0.00179873, 2.85638, -15.6569, -5.48237e-05, 0.236469, -15.7569, 0.00179873, 2.85638, -15.7569, 0.0014504, 2.97461, 15.6739, 0.00179873, 2.85638, -15.7569, -5.48237e-05, 0.236469, 0.0633735, 0.00179873, 2.90148, -15.7569, -5.48237e-05, 0.236469, 15.5779, -5.48237e-05, 0.236469, -15.6569),
		Vector3Array(-0.698307, -0.715638, 0.0151496, 0.946444, -0.11771, 0.300647, 0.705705, -0.708467, -0.00743107, 0.686768, 0.722968, -0.0752782, -0.914108, 0.314241, 0.256241, -0.686768, 0.722968, -0.0752782, 0.833823, 0.552032, 0.0, 0.710529, 0.703658, 0.00372751, 0.713502, 0.700606, -0.0081484, -0.684752, 0.728774, -0.00174552, -0.7058, 0.70826, 0.0146316, -0.695626, -0.717438, 0.0372514, -0.72583, -0.684175, 0.0712394, 0.72583, -0.684175, 0.0712394, 0.914124, 0.314138, 0.25631, -0.949954, -0.111094, 0.291968, 0.695627, -0.717436, 0.0372507, 0.980419, -0.196925, 0.0, 0.993014, 0.117999, 4.78873e-05, 0.993015, 0.117991, 0.0, 0.833806, 0.552058, 3.08058e-05, -0.99199, 0.126318, -1.75193e-09, -0.804049, 0.594563, 0.0, -0.991989, 0.126326, -6.14162e-05, 0.0149709, -0.841531, 0.540001, 0.405932, 0.913903, 0.0, -0.44783, 0.894119, 0.0, -0.381524, 0.924359, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.405895, 0.91392, 1.48425e-05, -0.429257, 0.903182, -4.19127e-05, -0.381566, 0.924341, -1.40776e-05, 0.689356, 0.72442, 0.00186323, 1.0, 0.0, 5.90552e-05, -0.973156, -0.230147, -5.74699e-05, -0.973155, -0.230149, 0.0, -0.804065, 0.594541, -4.28383e-05, 1.0, 0.0, 5.9244e-05, 1.0, 0.0, 0.000118109, -0.972784, -0.231716, -0.000108996, 0.490716, 0.871319, 3.62047e-05, -0.991016, -0.133658, -0.00469741, 1.0, -3.74864e-05, 5.31352e-05, 0.698307, -0.715638, -0.0151502, -0.705705, -0.708467, 0.00743142, -0.713502, 0.700606, 0.00814878, 0.7058, 0.70826, -0.0146321, -0.725066, -0.685336, -0.0677777, -0.913654, 0.314623, -0.25739, -0.687948, 0.722127, 0.0725188, 0.994862, -0.101219, 0.00182051, -0.697953, 0.716133, -0.00385039, 0.980419, -0.196924, 5.78763e-05, 0.000201982, 1.0, 0.0, -0.999567, 0.0294079, 0.0, -0.999568, 0.0294083, 0.0, 0.990478, 0.116092, 0.0739463, 0.707114, -0.707099, 0.0, 0.91364, 0.314246, -0.257898, 0.999573, 0.0292312, 0.0, 0.999573, 0.0292305, 0.0, 0.000177382, 1.0, 0.0, -0.707105, -0.707109, 0.0, 0.696174, -0.716978, -0.0358323, -0.69604, -0.717129, -0.0354116, 0.687682, 0.722469, 0.0716373, 0.724736, -0.685587, -0.0687677, 0.990539, 0.11539, -0.0739463, -0.707099, -0.707115, 0.0, 0.707112, -0.707101, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, -0.000670001, 6.29816e-06, 1.0, -0.000707486, 0.0, 1.0, -0.000707485, 0.0, 0.47826, 0.878219, 0.0, 1.0, 0.0, 0.000118109, 1.0, 0.0, 0.0, 0.980421, -0.196914, 0.000115798, 1.0, 0.0, 0.0, 1.0, -0.000707487, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 1, 7, 6, 8, 10, 9, 5, 12, 11, 13, 3, 14, 10, 0, 15, 2, 8, 7, 12, 13, 16, 17, 19, 18, 19, 6, 20, 9, 15, 21, 22, 21, 23, 1, 24, 15, 21, 15, 24, 24, 1, 19, 25, 6, 7, 26, 27, 25, 26, 9, 22, 28, 30, 29, 31, 33, 32, 18, 20, 34, 6, 25, 31, 25, 27, 33, 29, 30, 35, 21, 37, 36, 27, 22, 38, 39, 35, 40, 23, 36, 41, 20, 31, 42, 38, 23, 43, 29, 39, 44, 45, 46, 43, 47, 48, 34, 49, 51, 50, 48, 45, 52, 46, 47, 53, 33, 38, 53, 54, 18, 52, 55, 57, 56, 4, 58, 14, 59, 61, 60, 62, 55, 63, 64, 59, 65, 56, 64, 66, 51, 67, 60, 67, 68, 65, 60, 69, 50, 66, 65, 68, 4, 11, 70, 11, 16, 71, 16, 14, 62, 57, 70, 64, 70, 71, 59, 58, 4, 57, 71, 62, 61, 14, 58, 55, 63, 56, 50, 61, 63, 69, 72, 74, 73, 75, 77, 76, 0, 1, 15, 3, 4, 14, 1, 6, 19, 8, 9, 7, 5, 11, 4, 13, 14, 16, 10, 15, 9, 2, 7, 1, 12, 16, 11, 17, 18, 54, 19, 20, 18, 9, 21, 22, 22, 23, 38, 21, 24, 37, 24, 19, 17, 25, 7, 78, 26, 25, 78, 26, 22, 27, 28, 29, 74, 31, 32, 42, 18, 34, 52, 6, 31, 20, 25, 33, 31, 29, 35, 39, 21, 36, 23, 27, 38, 33, 39, 40, 79, 23, 41, 43, 20, 42, 34, 38, 43, 53, 29, 44, 80, 45, 43, 52, 47, 34, 53, 49, 50, 66, 48, 52, 34, 46, 53, 43, 33, 53, 32, 54, 52, 81, 55, 56, 63, 59, 60, 65, 62, 63, 61, 64, 65, 66, 56, 66, 50, 51, 60, 50, 67, 65, 60, 66, 68, 49, 4, 70, 57, 11, 71, 70, 16, 62, 71, 57, 64, 56, 70, 59, 64, 58, 57, 55, 71, 61, 59, 14, 55, 62, 63, 50, 69, 61, 69, 60, 72, 73, 82, 75, 76, 83)
	],
	"morph_arrays":[]
}
surfaces/1 = {
	"material":SubResource(13),
	"primitive":4,
	"arrays":[
		Vector3Array(0.00179873, 2.85638, -15.6569, -5.48237e-05, 0.236469, -0.0633735, -5.48237e-05, 0.236469, -15.6569, -5.48237e-05, 0.236469, 15.5779, -5.48237e-05, 2.85638, 0.0633735, -5.48237e-05, 2.85638, 15.5779, -5.48237e-05, 2.85638, -0.0633735, -5.48237e-05, 0.236469, 0.0633735),
		Vector3Array(1.0, -0.000670001, 6.29816e-06, 1.0, -3.74864e-05, 5.31352e-05, 1.0, -0.000707487, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 5.9244e-05, 1.0, 0.0, 0.0),
		FloatArray(6.29822e-06, 7.57082e-08, -1.0, 1.0, 5.31352e-05, -2.62003e-09, -1.0, 1.0, 5.78171e-11, 8.17216e-08, -1.0, 1.0, 0.0, -3.9883e-08, -1.0, 1.0, 0.0, -3.34606e-07, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 5.9244e-05, -1.48451e-08, -1.0, 1.0, 0.0, -3.74489e-07, -1.0, 1.0),
		null, ; no Vertex Colors,
		Vector2Array(36.1342, 0.837688, -35.1342, 12.8116, 36.1342, 12.8116, -35.1342, 0.826017, 35.7729, -11.1479, -35.1342, -11.1479, -35.1342, 0.83769, 35.7729, 0.825991),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 0, 1, 6, 3, 4, 7)
	],
	"morph_arrays":[]
}

[sub_resource id=15 type="Shader"]

resource_name = "Shader Nodetree"
code = "shader_type spatial;
render_mode blend_mix, depth_draw_always, cull_back, diffuse_burley, specular_schlick_ggx;



void node_bsdf_diffuse(vec4 color, float roughness, out vec3 albedo,
        out float specular_out, out float oren_nayar_roughness_out) {
    albedo = color.rgb;
    specular_out = 0.5;
    oren_nayar_roughness_out = roughness;
}

void vertex () {
}

void fragment () {
	
	// node: 'Diffuse BSDF'
	// type: 'ShaderNodeBsdfDiffuse'
	// input sockets handling
	vec4 node0_in0_color = vec4(0.014443841762840748, 0.17464739084243774,
		0.11697065830230713, 1.0);
	float node0_in1_roughness = float(0.0);
	vec3 node0_in2_normal = NORMAL;
	// output sockets definitions
	vec3 node0_bsdf_out0_albedo;
	float node0_bsdf_out1_specular;
	float node0_bsdf_out2_oren_nayar_roughness;
	
	node_bsdf_diffuse(node0_in0_color, node0_in1_roughness, node0_bsdf_out0_albedo,
		node0_bsdf_out1_specular, node0_bsdf_out2_oren_nayar_roughness);
	
	
	ALBEDO = node0_bsdf_out0_albedo;
	SPECULAR = node0_bsdf_out1_specular;
	NORMAL = node0_in2_normal;
	// uncomment it only when you set diffuse mode to oren nayar
	// ROUGHNESS = node0_bsdf_out2_oren_nayar_roughness;
}
"

[sub_resource id=16 type="ShaderMaterial"]

resource_name = ""
shader = SubResource(15)

[sub_resource id=17 type="ArrayMesh"]

resource_name = "Plane"
surfaces/0 = {
	"material":SubResource(16),
	"primitive":4,
	"arrays":[
		Vector3Array(-29.6921, 0.0, 9.91513, -29.6921, 0.0, 0.163373, -39.6921, 0.0, 23.7174, 39.6921, 0.0, -23.7174, -39.6921, 0.0, -23.7174, -0.176941, 0.0, -13.7174, -0.176941, 0.0, 13.7174, 39.6921, 0.0, 23.7174, 29.6921, 0.0, -9.91513, 29.6921, 0.0, -0.163373, -29.6921, 0.0, -9.91513, -29.6921, 0.0, -10.2712, -29.6921, 0.0, -13.3686, -29.6921, 0.0, -13.7174, -29.6921, 0.0, 13.7174, -29.6921, 0.0, 13.3686, -29.6921, 0.0, -0.163373, -29.6921, 0.0, 10.2712, 0.176941, 0.0, -13.7174, 29.2921, 0.0, -13.7174, 29.6921, 0.0, -13.7174, -29.2921, 0.0, -13.7174, 29.6921, 0.0, 13.7174, 29.2921, 0.0, 13.7174, -29.2921, 0.0, 13.7174, 0.176941, 0.0, 13.7174, 29.6921, 0.0, 9.91513, 29.6921, 0.0, 10.2712, 29.6921, 0.0, 13.3686, 29.6921, 0.0, -13.3686, 29.6921, 0.0, 0.163373, 29.6921, 0.0, -10.2712),
		Vector3Array(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0),
		FloatArray(1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0, 1.0, 0.0, 0.0, -1.0),
		null, ; no Vertex Colors,
		Vector2Array(0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0),
		null, ; No UV2,
		null, ; No Bones,
		null, ; No Weights,
		IntArray(0, 2, 1, 3, 5, 4, 6, 7, 2, 3, 9, 8, 10, 4, 11, 12, 4, 13, 4, 1, 2, 14, 2, 15, 11, 4, 12, 16, 4, 10, 2, 17, 15, 2, 0, 17, 1, 4, 16, 18, 3, 19, 20, 19, 3, 4, 21, 13, 5, 3, 18, 4, 5, 21, 22, 7, 23, 6, 2, 24, 7, 25, 23, 24, 2, 14, 7, 6, 25, 26, 7, 27, 28, 7, 22, 7, 9, 3, 20, 3, 29, 27, 7, 28, 30, 7, 26, 3, 31, 29, 3, 8, 31, 9, 7, 30)
	],
	"morph_arrays":[]
}
[node type="Spatial" name="Scene"]


[node name="Posts" type="MeshInstance" parent="."]

mesh = SubResource(3)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 1.62921e-07, 0.0, -1.62921e-07, 1.0, 0.0, 0.0, 0.0)

[node name="Court" type="MeshInstance" parent="."]

mesh = SubResource(6)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 1.62921e-07, 0.0, -1.62921e-07, 1.0, 0.0, 0.0, 0.0)

[node name="Lines" type="MeshInstance" parent="."]

mesh = SubResource(9)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 1.62921e-07, 0.0, -1.62921e-07, 1.0, 0.0, 0.0, 0.0)

[node name="Net" type="MeshInstance" parent="."]

mesh = SubResource(14)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 1.62921e-07, 0.0, -1.62921e-07, 1.0, 0.0, 0.0, 0.0)

[node name="Ground" type="MeshInstance" parent="."]

mesh = SubResource(17)
visible = true
transform = Transform(1.0, 0.0, 0.0, 0.0, 1.0, 1.62921e-07, 0.0, -1.62921e-07, 1.0, 0.0, 0.0, 0.0)
